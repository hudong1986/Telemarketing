<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="telemarketing.repository.RemindStateMapper" >
  <resultMap id="BaseResultMap" type="telemarketing.model.RemindState" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="remind_id" property="remindId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, remind_id, user_id, state,add_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from remindstate
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="selectByUserIdRemindId" resultMap="BaseResultMap" 
    >
    select 
    <include refid="Base_Column_List" />
    from remindstate
    where remind_id = #{remind_id,jdbcType=INTEGER}
    and user_id = #{user_id,jdbcType=VARCHAR}
    and state=1 limit 1
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from remindstate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByRemindId" parameterType="java.lang.Integer" >
    delete from remindstate
    where remind_id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="telemarketing.model.RemindState" >
    insert into remindstate (id, remind_id, user_id, 
      state,add_time)
    values (#{id,jdbcType=INTEGER}, #{remindId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT},#{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="telemarketing.model.RemindState" >
    insert into remindstate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="remindId != null" >
        remind_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="remindId != null" >
        #{remindId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="telemarketing.model.RemindState" >
    update remindstate
    <set >
      <if test="remindId != null" >
        remind_id = #{remindId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="telemarketing.model.RemindState" >
    update remindstate
    set remind_id = #{remindId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>